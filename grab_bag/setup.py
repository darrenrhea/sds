from setuptools import setup

setup(
    name="grab_bag",
    version="0.1.0",
    py_modules=[
        "DResUnet",
        "FloorDataset",
        "FrameReader",
        "RamInRamOutSegmenter",
        "RamInRamOutSegmenterForMultipleOutputs",
        "SegmentationInferrerFor1920x1088u3fasternetsModels",
        "Segmenter",
        "Unet",
        "alphamat",
        "apply_clahe",
        "blackpad_preprocessor_u16_to_u16",
        "clip_id_to_frame_ranges_we_care_about_for_segmentation",
        "colorbleed",
        "concatenate_clips",
        "construct_model_duat",
        "convert_hwc_np_f32_image_to_chw_torch_f16_on_device",
        "cutout_a_patch_from_fullsize_u16",
        "cutout_patches_from_fullsize",
        "duat",
        "dummy",
        "effunet",
        "fixds",
        "fixframes",
        "fixup",
        "get_all_annotations_in_a_single_folder",
        "get_all_annotations_in_these_folders",
        "get_datapoint_path_tuples_for_testing",
        "get_dataset_triplets",
        "get_frames_and_masks_of_dataset",
        "get_train_dataloader",
        "get_train_dataloader_for_ddp",
        "getobjects",
        "grirosffmi_get_ram_in_ram_out_segmenter_from_final_model_id",
        "infer",
        "infer2",
        "infer_flattened_clip_id_from_a_to_b",
        "infer_on_all_originals_in_this_directory",
        "infer_ranges_of_clip",
        "infer_time_augmentation",
        "lasso_segmenter",
        "load_images_and_masks_in_parallel",
        "load_list_of_image_files_in_parallel",
        "load_model_duat",
        "loss",
        "make_batch_videos",
        "make_easy_fake_feathered_segmentation_problem",
        "make_fake_discrete_segmentation_problem",
        "make_infer_time_augmentation_movie",
        "make_input_output_file_path_pairs",
        "make_video",
        "minimal_u3net",
        "nonparallel_infer3",
        "nonparallel_segment",
        "onnx_infer_f32",
        "onnx_infer_patch",
        "parse_shot_annotation",
        "process_frame",
        "reflect_preprocessor",
        "remove_not_most_recent_checkpoints",
        "reverse_transform",
        "run_batch_inferences",
        "run_tests",
        "segmenter_from_final_model_id",
        "selectframes",
        "show_histograms",
        "simple_infer",
        "ssim_loss",
        "stage_preannotations",
        "validate_test_case",
        "visualize_dataset",
        "weighted_l1_loss",
    ],
    license="MIT",
    long_description=open('README.md').read(),
    long_description_content_type="text/markdown",
    install_requires=[
    ],
    entry_points={
        "console_scripts": [
            "compare_models = compare_models_cli_tool:compare_models_cli_tool",
            "ifatj_infer_flattened_according_to_json5 = ifatj_infer_flattened_according_to_json5_cli_tool:ifatj_infer_flattened_according_to_json5_cli_tool",
            "ifigd_infer_frames_in_given_directory = ifigd_infer_frames_in_given_directory_cli_tool:ifigd_infer_frames_in_given_directory_cli_tool",
        ],
    },
)
