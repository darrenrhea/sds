import numpy as np


# munich_led_points = {
#     "led0_bl": [
#         -16.381658504044527,
#         1.4456117420522903,
#         -0.025765178362185056
#     ],
#     "led0_tl": [
#         -16.31110761865697,
#         1.3478709259284207,
#         0.8947667524700329
#     ],
#     "led01_t": [
#         -16.22172163552961,
#         9.75144378866264,
#         0.8832833923424592
#     ],
#     "led01_b": [
#         -16.238091936663093,
#         9.776491593035823,
#         -0.02214462911592441
#     ],
#     "led1_tr": [
#         -7.239722953865501,
#         9.764120958724423,
#         0.8843510029519189
#     ],
#     "led1_br": [
#         -7.23898544170565,
#         9.754100285224913,
#         -0.015204109439507363
#     ],
#     "led2_tl": [
#         -6.024814076791871,
#         9.75496695813233,
#         0.8857116908721918
#     ],
#     "led2_bl": [
#         -6.035008538925044,
#         9.76377197330884,
#         -0.010881435954950424
#     ],
#     "led2_tr": [
#         5.947315044689424,
#         9.761544750610232,
#         0.8822702184894989
#     ],
#     "led2_br": [
#         5.9505568537559155,
#         9.75415964030222,
#         -0.009124962336510981
#     ],
#     "led3_tl": [
#         7.343195618111525,
#         9.764236564224348,
#         0.8904449213092851
#     ],
#     "led3_bl": [
#         7.346693779278739,
#         9.76648340227666,
#         -0.009285029610877682
#     ],
#     "led34_t": [
#         16.353644098189605,
#         9.823686231071036,
#         0.8839303515729643
#     ],
#     "led34_b": [
#         16.302885197678346,
#         9.738330860686444,
#         -0.0013242638616585579
#     ],
#     "led4_tr": [
#         16.392044658074525,
#         1.3441487532970338,
#         0.8910500780778667
#     ],
#     "led4_br": [
#         16.34588241835924,
#         1.2775556647158293,
#         0.01628641820613785
#     ]
# }

munich_led_points = {
    "led0_bl": [
        -16.381658504044527,
        1.4456117420522903,
        -0.025765178362185056
    ],
    "led0_tl": [
        -16.31110761865697,
        1.3478709259284207,
        0.8947667524700329
    ],
    "led01_t": [
        -16.22172163552961,
        9.75144378866264,
        0.8832833923424592
    ],
    "led01_b": [
        -16.238091936663093,
        9.776491593035823,
        -0.02214462911592441
    ],
    "led1_tr": [
        -7.239722953865501,
        9.764120958724423,
        0.8843510029519189
    ],
    "led1_br": [
        -7.23898544170565,
        9.754100285224913,
        -0.015204109439507363
    ],
    "led3_tl": [
        7.343195618111525,
        9.764236564224348,
        0.8904449213092851
    ],
    "led3_bl": [
        7.346693779278739,
        9.76648340227666,
        -0.009285029610877682
    ],
    "led34_t": [
        16.353644098189605,
        9.823686231071036,
        0.8839303515729643
    ],
    "led34_b": [
        16.302885197678346,
        9.738330860686444,
        -0.0013242638616585579
    ],
    "led4_tr": [
        16.392044658074525,
        1.3441487532970338,
        0.8910500780778667
    ],
    "led4_br": [
        16.34588241835924,
        1.2775556647158293,
        0.01628641820613785
    ],
    "led2a_br": [
        -0.04222584258456408,
        9.75896580680553,
        -0.010003199145730703
    ],
    "led2a_tr": [
        -0.03874951605122323,
        9.758255854371281,
        0.8839909546808453
    ],
    "led2b_bl": [
        -0.04222584258456408,
        9.75896580680553,
        -0.010003199145730703
    ],
    "led2b_tl": [
        -0.03874951605122323,
        9.758255854371281,
        0.8839909546808453
    ],
    "led2a_tl": [
        -6.024814076791871,
        9.75496695813233,
        0.8857116908721918
    ],
    "led2a_bl": [
        -6.035008538925044,
        9.76377197330884,
        -0.010881435954950424
    ],
    "led2b_tr": [
        5.947315044689424,
        9.761544750610232,
        0.8822702184894989
    ],
    "led2b_br": [
        5.9505568537559155,
        9.75415964030222,
        -0.009124962336510981
    ]
}

def get_euroleague_geometry() -> dict:
    """
    The Euroleague basketball court is 28.0 meters long and 15.0 meters wide,
    and not the same as NBA.
    """
    points = {
        "c": [0.0, 0.0, 0],
        "tc": [0.0, 7.5, 0],
        "bc": [0.0, -7.5, 0],
        "tr_sm": [14.0 - 8.325, 7.5, 0],
        "tl_sm": [-(14.0 - 8.325), 7.5, 0],
        "bl_sm": [-(14.0 - 8.325), -7.5, 0],
        "tl_ra_tip": [-(14 - 1.2), 1.25, 0], 
        "bl_ra_tip": [-(14 - 1.2), -1.25, 0], 
        "tr": [14.0, 7.5, 0],
        "br": [14.0, -7.5, 0],
        "bl": [-14.0, -7.5, 0],
        "tl": [-14.0, 7.5, 0],
        "tl_bl_at_ll": [-14.0, 4.9/2, 0], 
        "bl_bl_at_ll": [-14.0, -4.9/2, 0], 
        "tr_bl_at_ll": [14.0, 4.9/2, 0], 
        "br_bl_at_ll": [14.0, -4.9/2, 0], 
        "tl_tl_at_ll": [-(14.0-5.8), 4.9/2, 0], 
        "bl_tl_at_ll": [-(14.0-5.8), -4.9/2, 0], 
        "tr_tl_at_ll": [14.0-5.8, 4.9/2, 0], 
        "br_tl_at_ll": [14.0-5.8, -4.9/2, 0], 
        "floor_texture_tr": [16.392, 9.758, 0],
        "floor_texture_br": [16.392, -9.758, 0],
        "floor_texture_bl": [-16.382, -9.758, 0],
        "floor_texture_tl": [-16.382, 9.758, 0],
    }
    points.update(munich_led_points)
    for side in ["left", "right"]:
        if side == "left":
            x0 = -(14.0 - 1.575)
            a = - np.pi / 2
            b = np.pi / 2
        else:
            x0 = 14.0 - 1.575
            a = np.pi / 2
            b = 3 * np.pi / 2
        for k in range(10 + 1):
            radius = 6.75
            angle = k / 10 * (b - a) + a
            y0 = 0
            x = x0 + radius * np.cos(angle)
            y = y0 + radius * np.sin(angle)
            points[f"{side}_circ_{k}"] = [x, y, 0]
        points[f"{side}_goal"] = [x0, y0, 10 * 12 * 0.0254]

    for key in points:
        points[key] = np.array(points[key])
    geometry = dict()
    geometry["points"] = points
    return geometry

