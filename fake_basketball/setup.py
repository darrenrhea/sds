from setuptools import setup

setup(
    name="fake_basketball",
    version="0.1.0",
    py_modules=[
        "AdPlacementDescriptor",
        "FloorTextureSource",
        "PasteableCutout",
        "add_an_opaque_alpha_channel_to_create_rgba_hwc_np_f32",
        "add_camera_pose_to_annotations",
        "add_multiple_copies_of_the_training_data",
        "add_noise_to_render",
        "add_noise_via_jpg_lossyness",
        "add_random_color_spill",
        "amcoff_add_many_copies_of_fixup_frames",
        "annotate_scale_on_balls",
        "annotate_scale_on_objects_occluding_led_screen",
        "assert_cutout_metadata_is_good",
        "augment_cutout",
        "augment_texture",
        "blowout_led_videos_they_gave_us_into_frames",
        "blur",
        "blur_both_original_and_mask_u8",
        "check_color_calibration",
        "choose_by_percent",
        "color_correct_an_ad_they_sent_us",
        "color_correction",
        "convert_from_rgb_hwc_np_u8_to_rgba_hwc_np_nonlinear_f32",
        "create_ij_displacement_and_weight_pairs",
        "decimate_like_yadif",
        "draw_3d_points",
        "draw_euroleague_landmarks",
        "draw_named_3d_points",
        "draw_points_on_rasterized_image",
        "enforce_whole_annotation_file_sets",
        "find_color_mapping_from_samples",
        "force_long_aspect_ratio",
        "g3dpaap_get_3d_position_assuming_a_plane",
        "gabofa_generate_a_bunch_of_fake_annotations",
        "gather_colors_on_indicator",
        "get_a_constant_color_rgba_hwc_np_f32",
        "get_a_few_camera_posed_human_annotations",
        "get_a_few_human_annotations",
        "get_a_random_ad_texture_rgba_np_f32_from_ad_paths",
        "get_a_random_ad_they_sent_us_file_path",
        "get_a_random_adrip_as_rgba_hwc_np_nonlinear_f32",
        "get_a_random_adrip_file_path",
        "get_a_random_xy_where_mask_is_foreground",
        "get_ad_name_to_paths_that_do_need_color_correction",
        "get_ad_name_to_paths_that_dont_need_color_correction",
        "get_ads_for_insertion",
        "get_all_the_approved_annotations_from_this_repo",
        "get_annotation_id_clip_id_and_frame_index_from_mask_file_name",
        "get_annotations_from_list_of_paths",
        "get_approved_annotations_from_these_repos",
        "get_augmentation_for_ad_texture",
        "get_augmentation_for_floor_texture",
        "get_augmentation_for_texture",
        "get_balls_augmentation",
        "get_camera_posed_actual_annotations",
        "get_camera_posed_background_frames_but_no_masks",
        "get_camera_posed_fake_background_annotations",
        "get_camera_posed_human_annotations_from_list_of_paths",
        "get_camera_posed_people_free_backgrounds",
        "get_coaches_augmentation",
        "get_cutout_augmentation",
        "get_cutout_descriptors",
        "get_cutout_descriptors_from_directories",
        "get_cutout_from_bounding_box",
        "get_cutouts",
        "get_enough_landmarks_to_validate_camera_pose",
        "get_euroleague_geometry",
        "get_human_cutout_kinds",
        "get_image_id_to_list_of_image_file_paths",
        "get_indicator_of_largest_area_quadrilateral_makeable_from_these_points",
        "get_led_corners",
        "get_led_corners_for_dallas_mavericks",
        "get_led_screen_occluding_object_augmentation",
        "get_mask_rgba_from_clip_id_and_frame_index",
        "get_mirror_world_ad_placement_descriptor",
        "get_nba_ads_for_insertion",
        "get_players_augmentation",
        "get_random_world_coordinates_for_a_cutout_of_this_kind",
        "get_referees_augmentation",
        "get_relevance_mask_from_camera_pose_and_ad_placement_descriptors",
        "get_repo_ids_to_use",
        "get_repo_ids_to_use_for_fake_data",
        "get_rid_of_16bit",
        "get_set_of_bad_pngs",
        "get_subdir_name_to_list_of_image_file_paths",
        "get_top_xy_for_cutout",
        "get_valid_team_names",
        "get_world_coordinate_descriptors_of_ad_placement_for_london_floor_texture",
        "get_world_coordinate_descriptors_of_ad_placement_for_munich_floor_texture",
        "get_world_coordinate_descriptors_of_ad_placements",
        "get_xy_where_mask_is_background",
        "group_cutouts_by_kind",
        "human_cutout_kinds",
        "insert_fake_ads_plain_version",
        "insert_fake_ads_they_sent_to_us",
        "landmarks_from_cameras_euroleague",
        "make_ad_placement_descriptor_from_origin_u_v_width_height",
        "make_fake_floor_not_floor_annotations_via_overwriting_everyone",
        "make_fake_important_people_annotations_from_people_free_backgrounds",
        "make_fake_segmentation_annotations",
        "make_people_free_backgrounds_by_overwriting_people_with_floor_texture_and_led_ads",
        "make_placement_descriptors_for_this_cutout_kind",
        "make_placement_descriptors_for_this_cutout_kind_for_baseball",
        "make_placement_descriptors_for_this_cutout_kind_homographic_rectangle_based_version",
        "make_relevance_mask_for_led_boards",
        "make_solid_black",
        "mofsa_make_one_fake_segmentation_annotation",
        "paste_cutout_onto_segmentation_annotation",
        "paste_floor_texture_overwriting_people",
        "paste_multiple_cutouts_onto_one_camera_posed_segmentation_annotation",
        "path_to_annotation_id",
        "rip_quad_out_of_image",
    ],
    license="MIT",
    long_description=open('README.md').read(),
    long_description_content_type="text/markdown",
    install_requires=[
    ],
    entry_points={
        "console_scripts": [
            "aifar_annotate_images_for_ad_rips = aifar_annotate_images_for_ad_rips_cli_tool:aifar_annotate_images_for_ad_rips_cli_tool",
            "align_ads = align_ads_cli_tool:align_ads_cli_tool",
            "g3dpaap_get_3d_position_assuming_a_plane = g3dpaap_get_3d_position_assuming_a_plane_cli_tool:g3dpaap_get_3d_position_assuming_a_plane_cli_tool",
            "mutate_all_jsons = mutate_all_jsons_cli_tool:mutate_all_jsons_cli_tool",
        ],
    },
)
