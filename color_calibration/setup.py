from setuptools import setup

setup(
    name="color_calibration",
    version="0.1.0",
    py_modules=[
        "CIE_linear_XYZ_to_sRGB",
        "accti_apply_color_correction_to_insertions",
        "analyze_what_photoshop_did",
        "calculate_metrics",
        "color_correct_in_hsv_space",
        "color_correct_in_lab_space",
        "color_correct_in_lab_space_old",
        "color_correct_in_rgb_space",
        "color_correct_rgb_hwc_np_u8_image_via_polynomial_coefficients",
        "color_correct_rgb_hwc_np_u8_image_via_polynomial_coefficients_u8_in_f32_out",
        "color_correction_demo",
        "color_curves",
        "convert_camera_pose_to_jsonable",
        "correct_each_channel_independently",
        "display_alignment_quality",
        "do_polynomial_fit",
        "do_quadratic_fit",
        "fccfi_fit_color_correction_from_insertions",
        "gather_colors_for_cartoon_for_refine_a_camera",
        "gather_data_for_color_correction",
        "get_ad_placement_descriptor_from_jsonable",
        "get_average_color_from_samples",
        "get_color_correction_polynomial_coefficients_from_from_to_mapping_array_f64",
        "render_then_get_from_to_mapping_array",
        "get_from_to_mapping_array_f64_from_insertion_description_id",
        "get_polynomial_regression_coefficients",
        "get_rgb_from_to_mapping_array",
        "hexidecimal_colors",
        "insert_color_corrected_ad",
        "interpret_as_indexed_image",
        "itvsaa_insert_the_very_same_ad_again",
        "linear_card_maker",
        "load_color_correction_from_json",
        "make_from_to_mapping_array",
        "make_input_for_photoshop",
        "mid_make_insertion_description",
        "optimize_self_insertion",
        "quantize_colors_via_kmeans",
        "recapitulate_one_frame",
        "regression_for_color_calibration",
        "sRGB_to_CIE_linear_XYZ",
        "sample_color_from_one_image",
        "save_color_correction_as_json",
        "show_color_correction_result",
        "show_color_correction_result_on_insertion_description_id",
        "show_color_map_for_color_correction",
        "show_insertion_description_id_without_color_correction",
        "undo_ffmpegs_png_issue",
        "unpack_insertion_description_id",
        "use_polynomial_regression_coefficients",
        "valid_context_ids",
        "wtf_it_does_not_invert",
    ],
    license="MIT",
    long_description=open('README.md').read(),
    long_description_content_type="text/markdown",
    install_requires=[
    ],
    entry_points={
        "console_scripts": [
            "change_colors = change_colors_cli_tool:change_colors_cli_tool",
            "gdfcc_gather_data_for_color_correction = gdfcc_gather_data_for_color_correction_cli_tool:gdfcc_gather_data_for_color_correction_cli_tool",
            "osri_optimize_self_reproducing_insertion = osri_optimize_self_reproducing_insertion_cli_tool:osri_optimize_self_reproducing_insertion_cli_tool",
            "uuid = uuid_cli_tool:uuid_cli_tool",
        ],
    },
)
