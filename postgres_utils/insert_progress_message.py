from get_psycopg2_connection import (
     get_psycopg2_connection
)
import json
import uuid

def insert_progress_message(
    run_id_uuid: uuid.UUID,
    progress_message_jsonable: dict
):
    """
    Inserts 'data' (a Python object convertible to JSON) into the 'message' column
    of the 'public.progress_log' table. 'insertion_time' and 'message_id' are
    auto-generated by defaults in the table.
    
    :param dbname:    Name of the PostgreSQL database
    :param user:      Database user
    :param password:  Password for the database user
    :param host:      Host where the PostgreSQL server is running
    :param port:      Port on which PostgreSQL is listening
    :param data:      A Python object (dict, list, etc.) that can be serialized to JSON
    """

    # Convert Python object to a JSON string
    assert isinstance(run_id_uuid, uuid.UUID)
    run_id_str = str(run_id_uuid)
    
    progress_message_jsonable["run_id"] = run_id_str
    json_data = json.dumps(progress_message_jsonable)

    conn = get_psycopg2_connection()

    try:
        with conn:
            with conn.cursor() as cur:
                # We only need to insert 'message' since
                # insertion_time and message_id have defaults
                insert_sql = """
                    INSERT INTO public.progress_log (run_id, message)
                    VALUES (%s, %s);
                """
                cur.execute(
                    insert_sql,
                    (run_id_str, json_data,))
                # Using context managers automatically commits if no exception occurs
    except Exception as e:
        print(f"Error inserting progress message: {e}")
        # Optionally re-raise the exception or handle it
        raise
    finally:
        conn.close()