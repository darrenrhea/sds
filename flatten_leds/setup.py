from setuptools import setup

setup(
    name="flatten_leds",
    version="0.1.0",
    py_modules=[
        "acptv_assign_closed_polygon_to_value",
        "amtfhrwvm_add_margin_then_flatten_homographic_rectangle_with_visibility_mask",
        "amthr_add_margins_to_homographic_rectangle",
        "cfssffi_create_full_size_segmentation_from_flattened_inferences",
        "decide_what_to_flatten",
        "eabbfasf_extract_ad_board_backgrounds_from_a_single_frame",
        "edub_extract_discovered_unoccluded_background",
        "encode_indicator_vector_as_list_of_intervals",
        "faiac_flatten_and_infer_and_compose",
        "faiaccpb_flatten_and_infer_and_compose_camera_pose_based",
        "fasf_flatten_a_single_frame",
        "ffrfi_flatten_frame_ranges_for_inference",
        "ffsi_flatten_for_segmentation_inference",
        "ffsi_flatten_for_segmentation_inference_implementation2",
        "ffst_flatten_for_segmentation_training",
        "ffst_flatten_for_segmentation_training_implementation2",
        "fhrwvm_flatten_homographic_rectangle_with_visibility_mask",
        "flatten_clip_id_from_a_to_b",
        "get_clip_ranges_from_json_file_path",
        "get_flat_mask_path",
        "get_flat_original_path",
        "get_flattened_file_path",
        "get_homography_for_flattening",
        "get_original_path",
        "get_polygon_points_for_brewcub_023094",
        "get_visibility_mask_path",
        "gthtmtfttf_get_the_homography_that_maps_this_frame_to_this_frame",
        "gwklfcafi_get_well_known_landmarks_from_clip_id_and_frame_index",
        "iacfmffrij_infer_and_compose_flattened_model_for_frame_ranges_in_json5",
        "infer_this_clip_id_frame_index",
        "load_homography_and_rip_size_from_json",
        "masfvp_make_a_single_flattened_vip_preannotation",
        "mfvp_make_flattened_vip_preannotations",
        "mfvs_make_flat_video_stack",
        "mooss_make_original_over_segmentations_stack",
        "mwatwtdfmc_make_white_above_the_wall_training_data_for_mathieu_caller",
        "new_make_batch_videos",
        "pflstd_prepare_flattened_led_segmentation_training_data",
        "project_3d_points_to_2d_pixel_coordinates",
        "save_homography_and_rip_size_as_json",
        "saweb_save_all_wide_enough_backgrounds",
        "sflbfi_stage_flattened_led_boards_for_inference",
        "uiatj_unflatten_inferences_according_to_json",
        "umbihr_unflatten_mask_back_into_homographic_rectangle",
        "utsi_unflatten_the_segmentation_inferences",
        "utsi_unflatten_the_segmentation_inferences_implementation2",
        "uttfmiopm_union_together_the_flat_masks_into_one_perspective_mask",
        "wdtlitl_where_does_this_line_intersect_this_line",
        "woatw_white_out_above_the_wall",
    ],
    license="MIT",
    long_description=open('README.md').read(),
    long_description_content_type="text/markdown",
    install_requires=[
    ],
    entry_points={
        "console_scripts": [
            "cfssffi_create_full_size_segmentation_from_flattened_inferences = cfssffi_create_full_size_segmentation_from_flattened_inferences_cli_tool:cfssffi_create_full_size_segmentation_from_flattened_inferences_cli_tool",
            "make_seg_movie = make_seg_movie_cli_tool:make_seg_movie_cli_tool",
            "pridub = pridub_cli_tool:pridub_cli_tool",
            "priflat = priflat_cli_tool:priflat_cli_tool",
            "priflatseg = priflatseg_cli_tool:priflatseg_cli_tool",
            "priseg = priseg_cli_tool:priseg_cli_tool",
            "seg = seg_cli_tool:seg_cli_tool",
            "sfabiftf_show_flattened_ad_board_inferences_for_these_frames = sfabiftf_show_flattened_ad_board_inferences_for_these_frames_cli_tool:sfabiftf_show_flattened_ad_board_inferences_for_these_frames_cli_tool",
        ],
    },
)
